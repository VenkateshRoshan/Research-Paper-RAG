name: Vertex AI Model Deployment

# Add permissions at the workflow level
permissions:
    contents: read
    id-token: write

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  workflow_dispatch:

env:
  PROJECT_ID: research-paper-rag
  REGION: us-central1
  REPOSITORY: research-paper-rag
  IMAGE_NAME: research-paper-rag
  MODEL_NAME: research-paper-rag-model
  ENDPOINT_NAME: rag-endpoint
  DISPLAY_NAME: rag-host
  MACHINE_TYPE: n1-standard-4
  MIN_REPLICAS: 1
  MAX_REPLICAS: 1
  SERVICE_ACCOUNT: storage-admin-account@research-paper-rag.iam.gserviceaccount.com

jobs:
#   build-and-push:
#     runs-on: ubuntu-latest
#     outputs:
#       container_uri: ${{ steps.build.outputs.container_path }}
#     steps:
#     - uses: actions/checkout@v3

#     - id: auth
#       name: Authenticate to Google Cloud
#       uses: google-github-actions/auth@v1
#       with:
#         credentials_json: ${{ secrets.GCP_SA_KEY }}

#     - name: Set up Cloud SDK
#       uses: google-github-actions/setup-gcloud@v1

#     - name: Configure Docker for GCR
#       run: |
#         gcloud auth configure-docker gcr.io

#     - name: Build and Push Container
#       id: build
#       run: |
#         VERSION=${GITHUB_REF_NAME:-latest}
#         CONTAINER_PATH=gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${VERSION}
        
#         docker build -t ${CONTAINER_PATH} .
#         docker push ${CONTAINER_PATH}
        
#         echo "container_path=${CONTAINER_PATH}" >> $GITHUB_OUTPUT

  create-custom-model:
    # needs: build-and-push
    runs-on: ubuntu-latest
    outputs:
      model_id: ${{ steps.create_model.outputs.model_id }}
    steps:
    - id: auth
      name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Create Custom Model
      id: create_model
      run: |
        MODEL_ID=$(gcloud ai models upload \
          --region=${{ env.REGION }} \
          --display-name=${{ env.MODEL_NAME }} \
          --container-image-uri=gcr.io/research-paper-rag/research-paper-rag:main)
        
        echo "model_id=${MODEL_ID}" >> $GITHUB_OUTPUT
        
        # Wait for model to be ready
        gcloud ai models $MODEL_ID --region=${{ env.REGION }}

  create-endpoint:
    needs: create-custom-model
    runs-on: ubuntu-latest
    outputs:
      endpoint_id: ${{ steps.create_endpoint.outputs.endpoint_id }}
    steps:
    - id: auth
      name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: projects/${{ env.PROJECT_ID }}/locations/global/workloadIdentityPools/github-pool/providers/github-provider
        service_account: ${{ env.SERVICE_ACCOUNT }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Check Existing Endpoint
      id: check_endpoint
      run: |
        ENDPOINT_ID=$(gcloud ai endpoints list \
          --region=${{ env.REGION }} \
          --filter="displayName=${{ env.ENDPOINT_NAME }}" \
          --format="get(name)" | cut -d'/' -f6)
        
        if [ -n "$ENDPOINT_ID" ]; then
          echo "endpoint_id=${ENDPOINT_ID}" >> $GITHUB_OUTPUT
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Create New Endpoint
      id: create_endpoint
      if: steps.check_endpoint.outputs.exists != 'true'
      run: |
        ENDPOINT_ID=$(gcloud ai endpoints create \
          --region=${{ env.REGION }} \
          --display-name=${{ env.ENDPOINT_NAME }} \
          --service-account=${{ env.SERVICE_ACCOUNT }} \
          --format="get(name)" | cut -d'/' -f6)
        
        echo "endpoint_id=${ENDPOINT_ID}" >> $GITHUB_OUTPUT

  deploy-model:
    needs: [create-custom-model, create-endpoint]
    runs-on: ubuntu-latest
    steps:
    - id: auth
      name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: projects/${{ env.PROJECT_ID }}/locations/global/workloadIdentityPools/github-pool/providers/github-provider
        service_account: ${{ env.SERVICE_ACCOUNT }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Deploy Model to Endpoint
      run: |
        gcloud ai endpoints deploy-model ${{ needs.create-endpoint.outputs.endpoint_id }} \
          --project=${{ env.PROJECT_ID }} \
          --region=${{ env.REGION }} \
          --model=${{ needs.create-custom-model.outputs.model_id }} \
          --display-name=${{ env.DISPLAY_NAME }} \
          --machine-type=${{ env.MACHINE_TYPE }} \
          --min-replica-count=${{ env.MIN_REPLICAS }} \
          --max-replica-count=${{ env.MAX_REPLICAS }} \
          --service-account=${{ env.SERVICE_ACCOUNT }} \
          --traffic-split=0=100